--- 
# Tiny Tapeout project information
project:
  wokwi_id:    0        # If using wokwi, set this to your project's ID

# If using an HDL, set wokwi_id as 0 and uncomment and list your source files here. 
# Source files must be in ./src and you must list each source file separately
  source_files:        
    - tt_um_asinghani_tinyscanchain_tt05.sv
    - seven_segment_seconds_out.sv
  top_module:  "tt_um_asinghani_tinyscanchain_tt05"      # Put the name of your top module here, must start with "tt_um_". Make it unique by including your github username

# How many tiles your design occupies? A single tile is about 167x108 uM.
  tiles: "1x1"    # Valid values: 1x1, 1x2, 2x2, 3x2, 4x2 or 8x2

# Keep a track of the submission yaml
yaml_version: 4

documentation: 
  author:       "Anish Singhani"      # Your name
  title:        "tinyscanchain Test Design"      # Project title
  language:     "SystemVerilog" # other examples include Verilog, Amaranth, VHDL, etc
  description:  "Test design for tinyscanchain, based on seven segment seconds design"      # Short description of what your project does

# Longer description of how the project works. You can use standard markdown format.
  how_it_works: |
      tinyscanchain is a scan-chain implementation in less than 80 lines of Python. This is a test design based on the use of seven segment seconds.

# Instructions on how someone could test your project, include things like what buttons do what and how to set the clock if needed
  how_to_test:  |
      After reset, the counter should increase by one every second with a 1kHz input clock.
      Experiment by changing the inputs to change the counting speed.
      Use the scan chain to test the internal state of the design.

# A description of what the inputs do (e.g. red button, SPI CLK, SPI MOSI, etc).
  inputs:               
    - enable
    - scan chain input
    - scan chain enable
    - unused
    - unused
    - unused
    - unused
    - unused
    - unused
# A description of what the outputs do (e.g. status LED, SPI MISO, etc)
  outputs:
    - segment a
    - segment b
    - segment c
    - segment d
    - segment e
    - segment f
    - segment g
    - scan chain output
# A description of what the bidirectional I/O pins do (e.g. I2C SDA, I2C SCL, etc)
  bidirectional:
    - unused
    - unused
    - unused
    - unused
    - unused
    - unused
    - unused
    - unused

# The following fields are optional
  tag:          "timer, test"      # comma separated list of tags: test, encryption, experiment, clock, animation, utility, industrial, pwm, fpga, alu, microprocessor, risc, riscv, sensor, signal generator, fft, filter, music, bcd, sound, serial, timer, random number generator, calculator, decoder, counter, puzzle, multiplier, game, oscillator,
  external_hw:  ""      # Describe any external hardware needed
  discord:      "anish256"      # Your discord handle, used for communication and automatically assigning tapeout role after a submission
  doc_link:     ""      # URL to longer form documentation, eg the README.md in your repository
  clock_hz:     1000       # Clock frequency in Hz (if required)
  picture:      ""      # relative path to a picture in your repository (must be 512kb or less)
