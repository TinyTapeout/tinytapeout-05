--- 
# Tiny Tapeout project information
project:
  wokwi_id:    0        # If using wokwi, set this to your project's ID

# If using an HDL, set wokwi_id as 0 and uncomment and list your source files here. 
# Source files must be in ./src and you must list each source file separately
  source_files:        
    - tt_um_chatgpt_snn_mtomlin5.v
    - decoder.v
    - chat_gpt_spi_slave_v2.v
    - chatgpt_lif_neuron_v2.v
    - chatgpt_neuron_network_v2.v
    - chatgpt_top_v2.v
  top_module:  "tt_um_chatgpt_snn_mtomlin5"      # Put the name of your top module here, must start with "tt_um_". Make it unique by including your github username

# How many tiles your design occupies? A single tile is about 167x108 uM.
  tiles: "2x2"    # Valid values: 1x1, 1x2, 2x2, 3x2, 4x2 or 8x2

# Keep a track of the submission yaml
yaml_version: 4

# As everyone will have access to all designs, try to make it easy for someone new to your design to know what
# it does and how to operate it. This info will be automatically collected and used to make a datasheet for the chip.
#
# Here is a great example: https://github.com/davidsiaw/tt02-davidsiaw-stackcalc/blob/38c5647f83aad2aec675d566aa3d67b98f0aac81/info.yaml
documentation: 
  author:       "Michael Tomlinson, Joe Lie, ChatGPT-4, Andreas Andreou - mtomlin5@jh.edu"   # Your name
  title:        "ChatGPT designed Spiking Neural Network"      # Project title
  language:     "Verilog" # other examples include Verilog, Amaranth, VHDL, etc
  description:  "SPI Programmable spiking neural network with 6 LIF neurons ( 3 input - 3 output ) with fully programmable weights (8-bit)"      # Short description of what your project does

# Longer description of how the project works. You can use standard markdown format.
  how_it_works: |
      This project implements 6 programmable digital LIF neurons. The neurons are arranged in 2 layers (3 in each). Spikes_in directly maps to the inputs of the first layer neurons. When an input spike is received, it is first multiplied by an 8 bit weight, programmable from the spi interface, 1 per input neuron. This 8 bit value is then added to the membrane potential of the respective neuron. 

      When the first layer neurons activate, its pulse is routed to each of the 3 neurons in the next layer. There are 9 programmable weights describing the connectivity between the first and second layers. Output spikes from the 2nd layer drive spikes_out. 

# Instructions on how someone could test your project, include things like what buttons do what and how to set the clock if needed
  how_to_test:  |
      After reset, program the neuron threshold, leak rate, and refractory period. Additionally program the first and 2nd layer weights (all programming is done over spi). Once programmed activate spikes_in to represent input data, track spikes_out synchronously (1 clock cycle pulses). 

# A description of what the inputs do (e.g. red button, SPI CLK, SPI MOSI, etc).
  inputs:               
    - ui_in[7] - unused
    - ui_in[6] - unused
    - ui_in[5] - spikes_in[2]
    - ui_in[4] - spikes_in[1]
    - ui_in[3] - spikes_in[0]
    - ui_in[2] - copi
    - ui_in[1] - cs_n
    - ui_in[0] - sclk
# A description of what the outputs do (e.g. status LED, SPI MISO, etc)
  outputs:
    - uo_out[7] - unused
    - uo_out[6] - unused
    - uo_out[5] - unused
    - uo_out[4] - unused
    - uo_out[3] - cipo
    - uo_out[2] - spikes_out[2]
    - uo_out[1] - spikes_out[1]
    - uo_out[0] - spikes_out[0]
# A description of what the bidirectional I/O pins do (e.g. I2C SDA, I2C SCL, etc)
  bidirectional:
    - GPIO pins are wired to outputs and driven high (unused by the design).
    - unused
    - unused
    - unused
    - unused
    - unused
    - unused
    - unused

# The following fields are optional
  tag:          "chatgpt, SNNs, spi"   
  external_hw:  "fpga"  # Describe any external hardware needed
  discord:      ""      # Your discord handle, used for communication and automatically assigning tapeout role after a submission
  doc_link:     ""      # URL to longer form documentation, eg the README.md in your repository
  clock_hz:     50000000       # Clock frequency in Hz (if required)
  picture:      ""      # relative path to a picture in your repository (must be 512kb or less)
